'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.getUpdate = getUpdate;
exports.addId = addId;
exports.removeId = removeId;

var _commonKeys = require('../common/keys');

var _commonArray_proxy = require('../common/array_proxy');

// Get a related update object by ID, or return a new one if not found.

function getUpdate(type, id, updates, cache) {
  if (cache[type].has(id)) return (0, _commonArray_proxy.find)(updates[type], function (update) {
    return update[_commonKeys.primary] === id;
  });

  var update = { id: id };
  updates[type].push(update);
  cache[type].add(id);
  return update;
}

// Add an ID to an update object.

function addId(id, update, field, isArray) {
  if (isArray) {
    if (!update.push) update.push = {};
    if (!update.push[field]) update.push[field] = [];
    update.push[field].push(id);
    return;
  }

  if (!update.replace) update.replace = {};
  update.replace[field] = id;
}

// Remove an ID from an update object.

function removeId(id, update, field, isArray) {
  if (isArray) {
    if (!update.pull) update.pull = {};
    if (!update.pull[field]) update.pull[field] = [];
    update.pull[field].push(id);
    return;
  }

  if (!update.replace) update.replace = {};
  update.replace[field] = null;
}