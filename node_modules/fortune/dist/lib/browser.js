// Local modules.
'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _slice = require('babel-runtime/helpers/slice')['default'];

var _bind = require('babel-runtime/helpers/bind')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _core = require('./core');

var _core2 = _interopRequireDefault(_core);

var _commonDefine_arguments = require('./common/define_arguments');

var _commonDefine_arguments2 = _interopRequireDefault(_commonDefine_arguments);

var _commonGlobal_object = require('./common/global_object');

var _commonGlobal_object2 = _interopRequireDefault(_commonGlobal_object);

// Static exports.

var _adapterAdaptersMemory = require('./adapter/adapters/memory');

var _adapterAdaptersMemory2 = _interopRequireDefault(_adapterAdaptersMemory);

var _adapterAdaptersIndexeddb = require('./adapter/adapters/indexeddb');

var _adapterAdaptersIndexeddb2 = _interopRequireDefault(_adapterAdaptersIndexeddb);

var _adapterAdaptersWebstorage = require('./adapter/adapters/webstorage');

var _adapterAdaptersWebstorage2 = _interopRequireDefault(_adapterAdaptersWebstorage);

var adapters = { memory: _adapterAdaptersMemory2['default'], indexedDB: _adapterAdaptersIndexeddb2['default'], webStorage: _adapterAdaptersWebstorage2['default'] };
var globalObject = (0, _commonGlobal_object2['default'])();
var hasIndexedDB = ('indexedDB' in globalObject);
var hasWebStorage = ('localStorage' in globalObject);

/**
 * This class just extends FortuneCore with some default serializers and static
 * properties.
 */

var Fortune = (function (_FortuneCore) {
  _inherits(Fortune, _FortuneCore);

  function Fortune() {
    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    _classCallCheck(this, Fortune);

    // Try to use in order of priority: IndexedDB, WebStorage, memory adapter.
    if (!('adapter' in options)) if (hasIndexedDB) options.adapter = { type: _adapterAdaptersIndexeddb2['default'] };else if (hasWebStorage) options.adapter = { type: _adapterAdaptersWebstorage2['default'] };

    if (!('enforceLinks' in options)) options.enforceLinks = false;

    _get(Object.getPrototypeOf(Fortune.prototype), 'constructor', this).call(this, options);
  }

  // Assign useful static properties to the default export.

  _createClass(Fortune, null, [{
    key: 'create',
    value: function create() {
      return new (_bind.apply(Fortune, [null].concat(_slice.call(arguments))))();
    }
  }]);

  return Fortune;
})(_core2['default']);

exports['default'] = Fortune;
(0, _commonDefine_arguments2['default'])(Fortune, { adapters: adapters });
module.exports = exports['default'];