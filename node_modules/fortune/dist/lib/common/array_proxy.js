'use strict';

var _Array$find = require('babel-runtime/core-js/array/find')['default'];

var _Array$includes = require('babel-runtime/core-js/array/includes')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.find = find;
exports.includes = includes;
var hasFind = ('find' in Array.prototype);
var hasIncludes = ('includes' in Array.prototype);

/**
 * Proxy for `Array.prototype.find`.
 *
 * @param {*[]} array
 * @param {Function} fn
 */

function find(array, fn) {
  // Check for ES6 `Array.prototype.find`, or fall back to
  // `core-js` polyfill.
  return hasFind ? array.find(fn) : _Array$find.apply(Array, arguments);
}

/**
 * Proxy for `Array.prototype.includes`.
 *
 * @param {*[]} array
 * @param {*} value
 */

function includes(array, value) {
  // Check for ES6 `Array.prototype.includes`, or fall back to
  // `core-js` polyfill.
  return hasIncludes ? array.includes(value) : _Array$includes.apply(Array, arguments);
}